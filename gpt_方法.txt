✅ 测试集构建方案

我建议从 多维度切分，构建 验证/测试集，这样能更科学地检验模型是否泛化到类似的因果知识。

1. 基于实体的留一法（Entity-level Holdout）

做法：
在构建训练集和测试集时，挑选部分实体（如 SPD单板、Host、异步音 等）只出现在测试集中，不在训练集中。

目的：
检验模型是否能把已学到的模式迁移到新的实体上。

例子：

训练集：关于 SPD单板 的错误加载引起的故障。

测试集：关于 Device单板 的错误加载引起的故障。
→ 看模型能否推理出类似的「加载错误→导致故障→需重新加载」的因果模式。

2. 基于关系的改写测试（Paraphrase & Abstraction Test）

做法：
把 text1 的「A 导致 B → 采取 C」换一种说法，甚至打乱顺序。

目的：
测试模型是否学到「因果逻辑」，而不是死记硬背。

例子：

原始 text1：
新扩展的Device配置为送Host → 导致交换机选择了错误的Device → 故障 → 建议重新加载或限制为两块

改写后：
由于交换机优先选择了未经测试的扩展Device播放Host，引发故障。为避免此问题，应确保仅配置两块可靠的Device并进行测试。

3. 基于场景组合的测试（Scenario Combination Test）

做法：
把不同案例中的实体组合交叉重组，生成新的「可能场景」放入测试集。

目的：
检验模型是否能在「未见过的组合」中仍然推理出正确因果关系。

例子：

训练：SPD板 + 异步音 + SSP局

测试：Device板 + Host + 非SSP局
→ 看模型是否还能回答「该检查加载情况，否则重新加载」。

4. 遮蔽式问答（Cloze / QA Test）

做法：
把 text1 转换为 填空题或问答题。

目的：
强制模型生成而不是复述。

例子：

输入：
某局升级后，播放忙音出问题，根因是【】错误加载了Host。应该采取的措施是【】。

期望输出：
Device / 重新加载Host 或限制为两块Device并严格测试

5. 跨时间验证（Before/After Scenario Test）

做法：
从案例中抽取「升级前正常，升级后出问题」的模式，构建测试集。

目的：
测试模型是否理解「状态变化」带来的问题。

例子：

测试：如果一个局点升级后，异步音突然无法播放，你首先应该检查什么？

答案：检查SPD板是否正确加载异步音，若未加载则按流程加载，若已加载则重新加载。


举例：
📘 测试集样例（基于 text2 案例）
1. 问答式填空

Q1
某局升级后发现忙音播放异常。根因是【____】错误加载了异步音。
期望答案：新扩展的 SPD 单板

Q2
为避免类似问题，建议在 SSP 局点只配置【】块 SPD 发送异步音，并在加载后【】。
期望答案：两块；严格测试

2. 因果逻辑改写

Q3
原始因果链：

新扩展的 SPD 单板配置为送异步音 → 交换机选择该板播放异步音 → 异步音未测试 → 故障

请改写成自然语言描述。
期望答案示例：

由于交换机选择了未经测试的新扩展 SPD 单板播放异步音，导致忙音无法正常播放。

3. 跨案例组合测试

（模拟一个“未见过的场景”，测试模型迁移能力）

Q4
假设某局不是 SPD 单板，而是 Device 单板 在升级后错误加载了 Host，可能会出现什么问题？应如何解决？
期望答案：

会导致忙音/语音播放异常。应检查 Device 是否已正确加载 Host，如果未加载则按流程加载，若已加载则重新加载。

4. 状态变化测试

Q5
该局点在升级前忙音播放正常，升级后出现故障。请问这说明了什么？
期望答案：
说明升级过程中配置或加载流程发生异常，导致新扩展单板被错误选为播放源。

5. 正负样本对照

（检验模型能否分辨正确因果 vs 错误因果）

Q6-正确因果
新扩展 SPD 单板配置了送异步音，但未经过测试 → 交换机选择该单板 → 异步音播放故障
✅ 正确

Q7-错误因果
升级后，交换机时钟漂移 → 导致忙音播放异常
❌ 错误

✅ 说明

Q1–Q2 = 直接考察是否记住核心知识点

Q3 = 测试能否理解/改写因果逻辑

Q4 = 检验是否能迁移到新实体（Device+Host）

Q5 = 考察对状态变化（升级前/后）的理解

Q6–Q7 = 抗干扰测试，防止模型胡乱归因


#### 数据比例问题：
给你一套直接可用的默认比例，再给两种“可调版本”（偏记忆/偏泛化），以及按题量落地的配比清单。类型对应我们前面定义的6类：
A=遮蔽式问答（Cloze/QA）、B=因果改写、C=场景重组、D=状态变化、E=实体留一（Holdout）、F=正负对照/错误因果判别。

推荐默认比例（兼顾记忆与泛化）

A 遮蔽式问答：25%

B 因果改写：15%

C 场景重组：20%

D 状态变化：10%

E 实体留一（未见实体/板卡/局点）：20%

F 正负对照（含错误因果、干扰项）：10%

额外硬性要求（强烈建议）

未见实体覆盖：整个测试集中，≥40%的小题必须涉及训练集中从未出现过的实体或新组合（主要来源于 E、C，两类合计通常≥40%）。

跨表达覆盖：**≥30%**的小题要求换述/改写（主要来源于 B，也可在 C/D 中用不同表述实现）。

干扰密度：在所有可判别题型里（A/C/E/F），**至少 20%**的题目含有具迷惑性的错误选项或无关线索。

两种可调版本
1）偏“记忆核验”（模型刚训练完、先查过拟合）

A 35%｜B 20%｜C 10%｜D 10%｜E 10%｜F 15%

未见实体覆盖 ≥25%

2）偏“泛化推理”（上线前能力压测）

A 15%｜B 15%｜C 25%｜D 10%｜E 25%｜F 10%

未见实体覆盖 ≥50%（重点考 E、C）

按题量落地的样例配比
小集（20题）

A×5｜B×3｜C×4｜D×2｜E×4｜F×2

其中至少 8 题为未见实体/新组合（从 C×4 + E×4 全部计入）

标准集（50题）

A×12｜B×7｜C×10｜D×5｜E×10｜F×6

未见实体/新组合 ≥20 题（主要由 C+E 提供）

压测集（100题）

A×25｜B×15｜C×20｜D×10｜E×20｜F×10

未见实体/新组合 ≥40 题；含强干扰项 ≥25 题

评分与通过线建议

权重（可平权，或略增泛化题权重）：

A/B/D：各 1.0 分

C/E（泛化）：各 1.2 分

F：1.0 分

通过门槛：

总分 ≥80%，且 C+E 分项 ≥70%（防止“只会背不会泛化”）。

对 F（对错因果）准确率 ≥85%（防止“胡乱归因”）。

实操小贴士

实体划分表：先把实体分成 S（Seen）/U（Unseen）两清单；出题时严格控制 C/E 从 U 或 S×U 交叉中采样。

模板多样化：A 与 B 题型使用 4–6 种语言模板随机化，降低表述泄题风险。

干扰构造：F 与 A/C/E 的选项中加入常见错误归因（如时钟漂移、网络抖动等与本案无关但常见的锅），提高辨识度。

难度梯度：每类题目按易/中/难≈4/4/2 切分；难题多用多跳因果或多实体联动。

版本冻结：固定随机种子与题库版本，训练-验证-复评可复现。